# run this from model_systems directory as:
#       python scripts/step3_pdb_from_xml/extract_all_pdb_ids_from_xml.py input/step3/uni_acc_str_of_validation_set.txt
# or for testing:
#   python scripts/step3_pdb_from_xml/extract_all_pdb_ids_from_xml.py input/step3/uni_acc_str_2.txt


import os
from bs4 import BeautifulSoup
from sys import argv


# Eliminates repeating entries from list. Returns a list with unique elements in the same order
def uniqify_list(a_list):
   # order preserving
   unique_list = []
   for e in a_list:
       if e not in unique_list:
           unique_list.append(e)
   return unique_list


#unpacking
script, filename = argv

#read the file (uni_acc_str_of_validation_set) that has the names of the xml files generated by STEP1
ACCs_file = open(filename)
ACCs_str= ACCs_file.read()
ACCs_list = ACCs_str.split()  #convert string to a list

#define input and output path
input_path = "input/step3"
output_path = "output/step3"

#iterate through Uniprot accession numbers
for acc in ACCs_list:
    XML_file = open(os.path.join(input_path, acc + '.xml'))
    XML_file_contents = XML_file.read()
    XML_file.close()

    soup = BeautifulSoup(XML_file_contents, "xml")
    # print(soup.prettify())
    # print soup
    # print "----------------"*5

    # writing file that containes prettified xml
    #file1 = open(os.path.join(output_path, acc + '_prettified_soup.xml'), "w")
    #file1.write(soup.prettify().encode("utf8"))
    #file1.close()

    pdb_list = []
    for tag in soup.find_all("dbReference", type="PDB"):
        pdb_list.append(str(tag['id']))

    #to remove repeated PDB IDs, if there is any
    uni_pdb_list = uniqify_list(pdb_list)

    print "This is all PDB IDs related to %s: \n" %acc, uni_pdb_list
    print "Number of entries in PDB list of %s: " %acc, len(uni_pdb_list)

    # To convert PDB list to a space separated string
    pdb_list_str = ' '.join(uni_pdb_list)
    print "String of PDB IDs: ", pdb_list_str
    #Number of PDBs in string
    print "Number of PDB IDs in string: ", (len(pdb_list_str)+1)/5
    print '-------------'


    #Writing PDB list as a string to a file
    file2 = open(os.path.join(output_path, "pdb_list_str_of_" + acc +".txt"), "w")
    file2.write(pdb_list_str)
    file2.close()


