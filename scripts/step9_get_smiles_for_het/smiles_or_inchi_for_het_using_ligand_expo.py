# This script extracts SMILES or InChI info using Ligand Expo
#
# input: file including 3 letter codes for chemical components present in a pdb file
#        this input file is the output of step7
# output: prints 3 letter codes,SMILES, InChI
# target output: tab separated file containing 3 letter codes and smiles and inchi
#
# run this from model_systems directory
# usage:  python scripts/step9_get_smiles_for_het/smiles_or_inchi_for_het_using_ligand_expo.py pdb_id
#         python scripts/step9_get_smiles_for_het/smiles_or_inchi_for_het_using_ligand_expo.py 1A27

from sys import argv
import os
import urllib2
from bs4 import BeautifulSoup

#unpacking
script, pdb_id = argv

#define input and output path
input_path = "input/step9"
output_path = "output/step9"


#read the file (component_list_str_of_PDB_ID). This  file is generated by step7
filename = 'component_list_str_of_' + pdb_id + '.txt'
input_file = open(os.path.join(input_path, filename))
chem_comp_str= input_file.read()
chem_comp_list = chem_comp_str.split()  # convert string to a list


#read xml formated page of Ligand Expo to find SMILES and InChI
for comp in chem_comp_list:
    url = 'http://ligand-expo.rcsb.org/reports/'
    request = urllib2.Request(url + comp[0] + "/" + comp + "/" + comp + ".xml" )
    response = urllib2.urlopen(request)
    xml_page = response.read()

    # maybe continue with Beautiful soup
    soup = BeautifulSoup(xml_page, "xml")
    print comp
    #print soup.prettify()

    # Find InChI string
    inchi_slice = soup.find(type="InChI")
    print inchi_slice.descriptor.get_text()

    #for child in inchi_slice:
    #    print child

    # Find SMILES string (Stereo SMILES OpenEye)
    # Here it extracts SMILES_CANONICAL.
    # There is another Stereo SMILES OpenEye string in file with attribute type = SMILES
    smiles_oe_slice = soup.find_all('pdbx_chem_comp_descriptor', program="OpenEye OEToolkits", type="SMILES_CANONICAL")
    print "Stereo SMILES (OpenEye, canonical): "
    print smiles_oe_slice[0].descriptor.get_text()
    print